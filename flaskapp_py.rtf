{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 import sqlite3\
\
from flask import Flask, request, g, render_template, send_file\
\
DATABASE = '/var/www/html/flaskapp/example.db'\
#DATABASE = 'M:\\Graduation\\Semister1\\CloudComputing\\AWS\\ApplicationDevelopment\\example.db'\
\
app = Flask(__name__)\
app.config.from_object(__name__)\
\
def connect_to_database():\
    return sqlite3.connect(app.config['DATABASE'])\
\
def get_db():\
    db = getattr(g, 'db', None)\
    if db is None:\
        db = g.db = connect_to_database()\
    return db\
\
@app.teardown_appcontext\
def close_connection(exception):\
    db = getattr(g, 'db', None)\
    if db is not None:\
        db.close()\
\
def execute_query(query, args=()):\
    cur = get_db().execute(query, args)\
    rows = cur.fetchall()\
    cur.close()\
    return rows\
\
def commit():\
    get_db().commit()\
\
@app.route("/")\
def hello():\
    execute_query("DROP TABLE IF EXISTS users")\
    execute_query("CREATE TABLE users (Username text,Password text,firstname text, lastname text, email text, count integer)")\
    return render_template('index.html')\
\
@app.route('/login', methods =['POST', 'GET'])\
def login():\
    message = ''\
    if request.method == 'POST' and str(request.form['username']) !="" and str(request.form['password']) != "":\
        username = str(request.form['username'])\
        password = str(request.form['password'])\
\
        result = execute_query("""SELECT firstname,lastname,email,count  FROM users WHERE Username  = (?) AND Password = (?)""", (username, password ))\
        if result:\
            for row in result:\
                return responsePage(row[0], row[1], row[2], row[3])\
        else:\
            message = 'Invalid Credentials !'\
    elif request.method == 'POST':\
        message = 'Please enter Credentials'\
    return render_template('index.html', message = message)\
\
@app.route('/registration', methods =['GET', 'POST'])\
def registration():\
    message = ''\
    if request.method == 'POST' and str(request.form['username']) !="" and str(request.form['password']) !="" and str(request.form['firstname']) !="" and str(request.form['lastname']) !="" and str(request.form['email']) !="":\
        username = str(request.form['username'])\
        password = str(request.form['password'])\
        firstname = str(request.form['firstname'])\
        lastname = str(request.form['lastname'])\
        email = str(request.form['email'])\
        uploaded_file = request.files['textfile']\
        if not uploaded_file:\
            filename = null\
            word_count = null\
        else :\
            filename = uploaded_file.filename\
            word_count = getNumberOfWords(uploaded_file)\
        result = execute_query("""SELECT *  FROM users WHERE Username  = (?)""", (username, ))\
        if result:\
            message = 'User has already registered!'\
        else:\
            result1 = execute_query("""INSERT INTO users (username, password, firstname, lastname, email, count) values (?, ?, ?, ?, ?, ? )""", (username, password, firstname, lastname, email, word_count, ))\
            commit()\
            result2 = execute_query("""SELECT firstname,lastname,email,count  FROM users WHERE Username  = (?) AND Password = (?)""", (username, password ))\
            if result2:\
                for row in result2:\
                    return responsePage(row[0], row[1], row[2], row[3])\
    elif request.method == 'POST':\
        message = 'Some of the fields are missing!'\
    return render_template('registration.html', message = message)\
\
@app.route("/download")\
def download():\
    path = "limerick.txt"\
    return send_file(path, as_attachment=True)\
\
def getNumberOfWords(file):\
    data = file.read()\
    words = data.split()\
    return str(len(words))\
\
def responsePage(firstname, lastname, email, count):\
    return """ First Name :  """ + str(firstname) + """ <br> Last Name : """ + str(lastname) + """ <br> Email : """ + str(email) + """ <br> Word Count : """ + str(count) + """ <br><br> <a href="/download" >Download</a> """\
\
if __name__ == '__main__':\
  app.run()}